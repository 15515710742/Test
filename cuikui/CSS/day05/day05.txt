二.CSS3 Core(核心)
  1.复杂选择器
    1.兄弟选择器
      兄弟元素:具备相同父级元素的平级元素之间称为兄弟元素
      ex:
        <div>
          <p></p>
	  <p></p>
	  <span></span>
	  <a></a>
        </div>
        注意:兄弟选择器,只能向后找,不能向前找
      1.相邻兄弟选择器
        作用:获取紧邻挨着某元素后的兄弟选择器
	语法:选择器1+选择器2{}
      2.通用兄弟选择器
        作用:获取某元素后的所有满足条件的兄弟元素
	语法:选择器1~选择器2{}
    2.属性选择器
      id,class,style,type,title,name,value...
      1.作用:
        允许通过元素所附带的属性及其值匹配页面元素
      2.语法:
        1.基本语法
	  [attr] attr表示任意属性
	  作用:匹配页面中所有附带attr属性的元素
	  ex:
	  [id]匹配页面中所有附带id属性的元素
	2.elem[attr]
	  elem:表示元素
	  attr:表示属性
	  作用:匹配页面中所有附带attr属性的elem元素
	  div[id] 匹配页面中所有带id属性的div元素
        3.[attr1][attr2]...
	  作用:匹配同时附带多个属性的元素
	  ex:
	  p[class][title]匹配同时附带class和title属性的p元素
        4.[attr=value]
	  作用:匹配attr属性值为value的元素
	  ex:
	  [id="d1"]匹配id值为d1的元素
	  等同于 #d1
        5.[attr~=value] 用于选取属性值中包含指定单词的元素
	  [attr^=value] 匹配属性值以指定值开头的每个元素
	  [attr$=value] 匹配属性值以指定值结尾的每个元素
	  [attr*=value] 匹配属性值中包含指定值的每个元素
    3.伪类选择器
      有学过的伪类选择器
        连链接伪类:  :link
	             :visited
	动态伪类:    :hover
	             :active
		     :focus
      1.目标伪类
        作用:突出显示活动的和HTML锚点元素,匹配被激活的锚点
	语法:选择器:target{声明样式}
      2.结构伪类
        作用:通过元素的结构关系匹配元素
	1.:first-child
	  匹配的元素是属于其父元素的第一个子元素
	  <div>
	    <p></p>
	    <p></p>
	    <p></p>
	    <p></p>
	  </div>
	  p:first-child{color:red;}
        2.:last-child
	  匹配的元素是属于其父元素的最后一个子元素
        3.:nth-child(n)
	  匹配的元素是属于其父元素中第n个子元素(n表示任意位置)
        4.:empty
	  匹配没有子元素的元素
	  ex:
	  <div></div>
        5.:only-child
	  匹配的元素是属于其父元素中的唯一的子元素
        6.否定伪类
	  将满足指定选择器的元素排除在外
	  语法:  :not(selector)
    4.伪元素选择器
      1.:first-letter 或 ::first-letter
        作用:匹配某个元素首字符
      2.:first-line 或 ::first-line
        作用:匹配某个元素的首行
	注意:如果首字符和首行样式相冲突时,优先使用首字符样式
      3.::selection
        作用:匹配被用户选取的内容
	注意:只能修改文本的颜色和背景颜色
  2.内容生成
    1.什么是内容生成?
      使用css动态的向某元素中插入一段内容
    2.为元素选择器
      1.:before 或 ::before
        作用:匹配到某元素的内容区域之前
	<p>(:before)床前明月光</p>
      2.:after 或 ::after
        作用:匹配到某元素的内容区域之后
	<p>床前明月光(:after)</p>
    3.内容属性
      属性:content
        作用:向匹配到的位置处增加内容
	取值:
	  1.字符串 将字符创用""引起来
	  2.图片 url(图片路径)
    4.解决问题
      1.浮动元素父元素的高度的问题
        1.添加的元素必须位于父元素的最后一个子元素位置处(:after)
	2.添加的必须是块级元素(display:block;)
	3.添加的元素必须是空元素(content:"";)
	4.clear:both;
	#parent:after{
          content:"";
          display:block;
          clear:both;
        }
      2.子元素外边距溢出
        1.在父元素的第一个子元素位置处添加
	2.添加的是一个空的<table></table>标记(内容为空)
	选择器:before{
          content:"";
          display:table;
	}
三.弹性布局(重点)
  1.什么是弹性布局?
    弹性布局就是一种布局方式,主要解决某元素中子元素的布局方式,为布局提供最大的灵活性
  2.弹性布局的相关概念
    1.弹性布局的容器
      要布局的子元素的父元素称为容器
    2.弹性布局的项目
      要布局的子元素称为项目
    3.主轴
      项目们排列方向的一根轴,称为主轴
      如果项目们按照横向排列,那么x轴就是主轴
      如果项目们按照纵向排列,那么y轴就是主轴
    4.交叉轴
      与主轴垂直的轴称为交叉轴
  3.语法
    将元素变为弹性容器后,那么他所有的子元素将变为弹性项目,都允许按照弹性布局的方式排列
    属性:display:
    取值:
      1.flex 将块级元素变为容器
      2.inline-flex:将行内元素变为容器
    注意:
      1.元素设置为flex容器之后,子元素的float/clear/vertical-align属性将失效
      2.元素设置为flex容器之后,子元素都允许修改尺寸
      3.容器的text-align属性会失效
  4.容器的属性
    1.flex-direction
      作用:指定容器的主轴及其排列方向
      取值:
        1.row           默认值,即主轴是x轴,起点在左端
	2.row-reverse   主轴是x轴,起点在右段
	3.column        主轴是y轴,起点在顶端
	4.column-reverse主轴y轴,起点在底部
    2.flex-wrap
      作用:当一个主轴排列不下所有项目时可以换行显示
      取值:
        1.nowrap 默认值,即空间不够时,也不换行,项目会缩小
	2.wrap   换行
	3.wrap-reverse 换行并反转
    3.flex-flow
      作用:是flex-direction和flex-wrap的缩写
      取值:
        1.rap wrap ,默认值
	2.direction wrap
    4.justify-content
      作用:定义项目在主轴上的对齐方式
      取值:
        1.flex-start在主轴的起点对齐
	2.flex-end  在主轴的终点对齐
	3.center    在主轴的居中对齐
	4.space-between 两端对齐
	5.space-around






