一.定位
  1.什么是定位
    改变元素在网页中的位置
  2.分类
    1.普通流定位
    2.浮动定位
    3.相对定位
    4.绝对定位
    5.固定定位
  3.普通流定位
    又称为文档流定位,页面中元素们的默认显示方式
    1.每个元素在页面都有自己的空间
    2.每个元素都是从父元素的左上角开始显示
    3.块级元素都是按照从上到下的方式逐个排列,每个元素独占一行
    4.行内元素都是多个元素在一行显示,从左往右逐个排列
    
    如何解决多个块级元素在一行中显示?
  4.浮动定位(重点)
    1.什么是浮动&浮动特点
      1.元素一旦浮动起来,脱离了文档流,不占页面空间,其它未浮动元素一定会上前补位
      2.浮动元素会停靠在父元素的左边或右边,或者其他已经浮动元素的边缘
      3.浮动解决了多个块级元素在一行内显示的问题
    2.语法:
      1.属性:float
        取值:
	  1.left  左浮动,让元素停靠在父元素的左边,或挨着左侧已有的浮动元素
	  2.right 右浮动,让元素停靠在父元素的右边,或挨着右侧已有的浮动元素
	  3.none  默认值,无浮动效果
      2.浮动引发的特殊情况
        1.当父元素显示不下所有浮动元素时,最后一个元素将换行显示,但是有可能被卡住
	2.元素一旦浮动起来,宽度将以内容为准(未指定宽度的情况下)
	3.元素一旦浮动起来,将会变成块级元素,允许修改尺寸并,且可以设置垂直外边距
	4.文本,行内元素,行内块元素是不会被浮动元素压在下方,而是巧妙避开,环绕浮动元素显示
      3.清除浮动
        元素一旦浮动起来之后,就会对后续元素带来一定的影响(后续元素上前补位),如果后续元素不想上前补位那么就可以通过清除浮动来解决
	属性:clear
	取值:
	  1.left  清除当前元素前面元素左浮动所带来的影响
	  2.right 清除当前元素前面元素右浮动所带来的影响
	  3.both  清除当前元素前面元素任意浮动所带来的影响
	  4.none  默认值,不做任何清除
      4.浮动元素对父元素高度带来的影响
        元素的高度.都是以未浮动元素为准,浮动元素不占高度
	解决父元素高度问题:
	  1.直接为父元素设置高度
	    弊端:不是每次都知道父元素的高度
	  2.设置父元素也浮动
	    弊端:不是每次父元素都需要设置浮动,并且设置浮动后会影响后续元素
	  3.位父元素设置overflow
	    取值:hidden或auto
	    弊端:如果有内容需要溢出显示那么也会一同被隐藏
	  4.在父元素中追加一个空块级元素,并设置clear:both;
二.显示方式
  1.显示方式
    1.什么是显示方式
      决定了元素在网页中的表现形式(块级,行内,行内块)
    2.语法:
      属性:display
        取值
	  1.none 不显示元素(隐藏)
          2.block 让元素表现的和块级元素一致
	    特点:独占一行,可以设置高和垂直外边距
          3.inline 让元素表现的和行内元素一致
	    特点:多个元素在一行中显示,不能修改尺寸
	  4.inline-block 让元素表现的和行内块元素一致
	    特点:多个元素在一行内显示,但是可设置高宽,垂直外边距
	  5.table 让元素表现的和table一致
	    特点:尺寸以内容为准,每个元素独占一行,允许修改尺寸
	  注意:一般将行内元素修改显示方式为块级或者行内块
	  便于修改尺寸
  2.显示效果
    1.隐藏/显示
      属性:visibility
      取值:
        1.visible 可见的,默认值
	2.hidden  隐藏,元素不可见
      Q:display:none和visibility:hidden;的区别?
        display:none;隐藏,会脱离文档流,不占页面空间
	visibility:hidden;隐藏,不脱离文档流,依然占页面空间
  3.透明度
    属性:opacity
    取值:0~1(值越小越透明)
    Q:opacity与rgba()的区别?
      opacity:作用于元素,只要是跟元素相关的颜色都会跟着改变透明度
      rgba(): 只会改变某一种颜色的透明度
  4.垂直对齐方式
    属性:vertical-align
    利用场合
      1.表格中
        取值:top/middle/bottom
      2.图片中使用
        作用:控制图片与两边的文字的垂直对齐方式
	取值:
	  top:上
	  middle:中
	  bottom:下
	  baseline:基线对齐,默认值
	注意:编写网页时,通常都会将所有图片垂直对齐方式更改为除基线对齐以外的对齐方式
  5.光标
    作用:改变鼠标悬停在元素上时的状态
    属性:cursor
    取值:
      1.default   箭头
      2.pointer   小手
      3.crosshair +
      4.text      I
      5.wait      等待
      6.help      帮助
三.列表
  1.列表项标识
    属性:list-style-type
    取值:
      1.none
      2.disc
      3.circle
      4.square
  2.列表项图片
    属性:list-style-image
    取值:url(图片路径)
  3.列表项的位置
    作用:将默认的列表项的位置放在li的里面
    属性:list-style-position
    取值:
      1.outside 默认值,将标识放置于li外面
      2.inside将标识放在li里面
  4.属性的简写方式
    属性:list-style
    取值:type url() position;
    常用方式:list-style:none;
四.定位-相对/绝对/固定
  1.定位属性
    1.属性:position
      取值:
        static:  静态,默认值
	relative:相对定位
	absolute:绝对定位
	fixed:   固定定位
      注意:将元素的position设为relative/absolute/fixed任何一个值得时候,那么该元素就是一个已定位元素
  2.偏移属性
    top/bottom/left/right
    以上四个属性取值均为数字(px)
    left:100px; //往右偏移100px;
    left:-100px;//往左偏移100px;
    right:100px;//往左偏移100px;
  3.定位方式
    1.相对定位
      1.什么是相对定位
        元素相对于自己原来的位置偏移某个距离
      2.使用场合
        在元素位置微调时使用
      3.语法:
        position:relative
	必须配合偏移属性使用
    2.绝对定位
      1.什么是绝对定位&特点
        1.绝对定位会脱离文档流,不占网页空间
	2.绝对定位的元素会相对于离他"最近的""已经定位的""祖先元素"去实现位置的初始化,
	  如果没有已定位的祖先元素,那么元素将会相对于body去实现位置的初始化
      2.语法:
        position:absolute;
	配合偏移属性使用
      3.使用场合
        1.有堆叠效果的元素
	2.弹出菜单
      4.注意
        绝对定位会让元素变为块级,允许修改尺寸
    3.固定定位
      1.什么是固定定位
        将元素固定在网页的某个位置,位置将不会随着滚动条的发生变化,一只固定在可视区域
      2.语法
        position:fixed;
	配合偏移属性使用
      3.注意
        1.固定定位始终相对于body去实现位置的初始化
	2.固定定位的元素会变成块级元素
	3.固定定位的元素不会占页面的空间
    4.定位
      1.堆叠顺序
        一旦将元素变为已定位的元素的话,元素闷就有可能出现堆叠效果
        如何改变堆叠顺序?
        属性:z-index
        取值:无单位的数字,数字越大元素越靠上显示
        注意:
          1.父子元素间,z-index无效,永远都是子元素压在父元素上
          2.只有已定位的元素才能够使用z-index





