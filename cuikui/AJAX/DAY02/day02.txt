高性能网站建设指南
一.http协议
  1.Request请求消息
    客户端要带给服务器的数据,由三部分组成:请求起始行,请求的头,请求主体
    1.请求起始行
      1.请求方法
        1.get 客户端向服务器要数据时使用    特点:靠地址栏传递查询字符串,无请求主体
	2.post 客户端向服务器提交数据时使用 特点:有请求主体
	3.delete 表示客户端删除服务器的内容(一般禁用)
	4.put 表示客户端想要放弃的数据到服务器上(一般禁用)
	5.connect 测试连接
	6.trace 追踪请求路径
	7.option 选项,保留以后使用
	8.head 表示客户端只获取响应的消息头
      2.请求URL
      3.协议版本http/1.1
    2.请求头
      1.host:localhost 本地主机
        作用:告诉服务器请求的是哪个主机
      2.Connection:keep-alive
        作用:告诉服务器进行持久连接
      3.User-Agent:
        作用:告诉服务器自己(浏览器)的类型
      4.Accept-Ecoding:gzip,deflate
        作用:告诉服务器自己能接受的压缩文件类型
      5.Accept-Language:zh-CN,zh;q=0.9
        作用:告诉服务器自己能接受的自然语言类型
      6.Referer: http://localhost/day02
    3.请求主体
      Form Data
  2.Response响应消息
    服务器发送给客户端的数据,有三部分组成,响应的起始行,响应的头,响应的主体.
    1.响应的起始行
      1.协议版本http/1.1
      2.响应状态码
        作用:告诉浏览器,服务器响应的状态什么
	1xx:100-199 提示消息
	2xx:成功响应
	    200 ok
	3xx:301 永久性的重定向
	    302 临时重定向
	    304 请求未被修改,命中缓存
        4xx:客户端请求错误
	    404 NOT Found 请求资源不存在
	    403 Forbidden 权限不够
	    405 Method Not Allowed 请求方法不被允许
        5xx:服务器内部运行有错误
	    500 服务器内部错误
      3.原因短句:对状态码的解释说明
    2.响应的头
      1.Date
        作用:告诉浏览器,服务器的响应时间
	格林尼治时间-->北京时间+8h
      2.Connection:Keep-alive
        作用:告诉浏览器已经启动了持久连接
      3.Connect-Type
        作用:响应的主体类型是什么
	1.text/html 响应回来的数据是HTML文本
	2.text/plain 响应的回来的是普通文本
	3.text/css 响应回来的是样式文本
	4.application/JavaScript 响应回来的是js脚本代码
	5.application/xml 响应回来的是xml格式的字符串
	6.application/json 响应回来的是json格式字符串
        7.image/jpg 响应回来的是图片
    3.响应主体
      Response
  3.缓存
    1.什么是缓存
      客户端将服务器响应回来的数据进行自动保存,当再次访问时,直接使用保存的数据
    2.缓存的优点
      1.减少了冗余数据的传输,节省了客户端的流量
      2.节省了服务器带宽
      3.降低了对服务器资源的消耗和运行要求
      4.降低了由于远距离传输而造成的延时加载
    3.与缓存相关的消息头
      1.Cache-Control
        作用:从服务器将文档传到客户端之时起,此文档处于新鲜的秒数
	语法: Cache-Control:max-age=处于新鲜的秒数
	      Cache-Control:0 不缓存
      2.Expires
        作用:指定过期的确切时间
	语法: Expries:Tue,31 Jul 2018 01:56:16 GMT
  4.在网页中添加缓存
    <meta http-equiv="消息头" control="值">
    ex:
    <meta http-equiv="Cache-Control" content="max-age=3600">
  5.http性能优化
    1.http连接过程
      发起请求-->建立连接-->处理请求-->访问资源-->构建响应-->发送响应-->记录日志
    2.http连接性能的优化
      1.减少连接创建的次数
      2.减少请求的次数
      3.提高服务器端的运行速度
      4.尽可能减少响应数据的长度
    3.安全的http协议
      HTTPS协议:安全版本的http协议
      1.客户端发送请求消息时,在ssl层进行加密,服务器接受到加密文件,在ssl层进行解密,得到请求明文,对请求进行处理
      2.服务器发送响应消息时,在ssl层进行加密,客户端接收到加密文件,在ssl层进行解密,得到响应明文,解析响应内容
二.DOM操作
  1.完整的JavaScript的组成
    1.js核心:ECMA Script
    1.DOM:Document Object Module文档模型
      让js动态的操作页面的元素
    3.BOM:Broser Object Module 浏览器对象型
      让js动态操作浏览器
  2.使用js获取页面上的某个元素
    1.为元素设置id属性值
      <div id="d1"><div>
    2.在js中,允许通过元素的id来获取指定元素
      document.getElementById("id");
    3.获取/设置某元素的内容
      DOM对象的一个的属性:innerHTML
      表示的是标签内所有的内容
    4.获取或者是设置表单控件的数据
      在DOM中,表单控件是通过DOM对象的value属性来获取/设置的
      使用步骤:
        1.通过id获取表单控件元素
	2.通过value属性获取/设置表单控件的值
    5.简化document.getElementById()
      1.根据指定的id值获取对应的元素id值
      2.参数id:要获取的元素的id值
      3.返回值,获取的对应的HTML元素
      function $(id){
        return document.getElementById(id);
      }
    6.HTML元素的事件
      1.什么是事件
        允许通过用户的行为来激发的操作就是事件
	常用事件: onclick
      2.其他事件
        1.文本框或密码框-onblur  失去焦点的事件
	2.文本框或密码框-onfocus 获取焦点的事件
      3.body的onloal事件
        网页一加载时就要执行的操作
三.AJAX
  1.名词解释
    1.同步(Synchronous)
      在一个任务进行中时,不能开启其他的任务
      同步访问:浏览器在向服务器发送请求时,浏览器只能等待服务器的响应,不能做其他的事情
      出现场合:
        1.地址栏输入网址访问网页
	2.a标记的跳转
	3.submit表单提交
    2.异步(Asynchronous)
      在一个任务开启时,可以开启其他的任务
      异步访问:浏览器向服务器发送请求时,不能耽用户在网页上的其他操作
      出现场合:
        1.用户名的重复验证
	2.聊天室
	3.搜索建议(百度,京东,淘宝)
	4.股票的走势图

	

















